import streamlit as st
from groq import Groq
import requests
import json

# Configura√ß√£o do Streamlit
st.title('üßÆ Gerador de Atividades de Matem√°tica Personalizadas')
st.write('Este aplicativo cria atividades de matem√°tica pr√°ticas e envolventes para ajudar alunos com dificuldades.')

# Entrada de credenciais
api_token = st.text_input("üîë Insira seu token de autentica√ß√£o da API principal:", type="password")
groq_api_key = st.text_input("üîê Insira sua chave API do Groq:", type="password")

# Sele√ß√£o de tema e dificuldade
tema = st.selectbox("üìö Selecione o tema da atividade:", ["Fra√ß√µes", "Multiplica√ß√£o", "Divis√£o", "Problemas de Palavra"])
nivel_dificuldade = st.selectbox("üéöÔ∏è Selecione o n√≠vel de dificuldade:", ["F√°cil", "M√©dio", "Dif√≠cil"]) 

# Bot√£o para iniciar a gera√ß√£o da atividade
if st.button("Gerar Atividade"):
    # Verifica√ß√£o de preenchimento das credenciais
    if api_token and groq_api_key:
        # URL da API principal
        url_fragments = "https://ragne.codebit.dev/rag/text-fragments"
        
        # Configura√ß√£o do cabe√ßalho da requisi√ß√£o
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Bearer {api_token}"
        }
        
        # Payload para requisi√ß√£o
        payload_atividade = {
            "question": f"Crie uma atividade de {tema.lower()} com n√≠vel {nivel_dificuldade.lower()} para alunos de ensino fundamental."
        }

        # Requisi√ß√£o √† API principal
        st.info("üöÄ Gerando a atividade, por favor, aguarde...")
        response = requests.post(url_fragments, headers=headers, data=json.dumps(payload_atividade))

        if response.status_code in [200, 201]:
            st.success("‚úÖ Requisi√ß√£o √† API principal bem-sucedida.")
            fragmentos = response.json()
            atividade_texto = "".join([frag['text'] for frag in fragmentos])

            # Processamento com a API Groq
            client = Groq(api_key=groq_api_key)
            completion = client.chat.completions.create(
                model="llama3-8b-8192",
                messages=[{
                    "role": "user",
                    "content": f"""
                    Baseado nas informa√ß√µes fornecidas a seguir, crie uma atividade de matem√°tica detalhada, com um passo a passo claro, que possa ser utilizada por um professor do ensino fundamental. A atividade deve incluir:
                    - Introdu√ß√£o e contexto da atividade.
                    - Descri√ß√£o detalhada dos passos que os alunos devem seguir.
                    - Perguntas desafiadoras que incentivem o pensamento cr√≠tico.
                    - Explica√ß√µes claras para ajudar na resolu√ß√£o das quest√µes.
                    - Dicas ou observa√ß√µes importantes para o professor.

                    Informa√ß√µes fornecidas: {atividade_texto}

                    Formato da resposta esperado:
                    1. **Introdu√ß√£o**
                    2. **Passo 1: [Descri√ß√£o]**
                    - Pergunta: [Exemplo de quest√£o]
                    - Dica: [Dica para o professor]
                    3. **Passo 2: [Descri√ß√£o]**
                    - Pergunta: [Exemplo de quest√£o]
                    - Dica: [Dica para o professor]
                    4. **Conclus√£o e observa√ß√µes finais**
                    """
                }],
                temperature=0.7,
                max_tokens=1500,
                top_p=1,
                stream=True,
                stop=None
            )

            st.write("### ‚ú® Atividade Final")
            resposta_final = ""
            for chunk in completion:
                if hasattr(chunk, 'choices') and chunk.choices[0].delta.content:
                    resposta_final += chunk.choices[0].delta.content

            # Exibi√ß√£o da resposta com formata√ß√£o visual
            st.markdown(
                f"""
                <div style="background-color:#f0f8ff; padding:15px; border-radius:10px;">
                <h3 style="color:#2a9d8f;">üìù Resultado da Atividade:</h3>
                <p style="font-size:16px; color:#264653;">{resposta_final}</p>
                </div>
                """, 
                unsafe_allow_html=True
            )

        else:
            st.error("‚ùå Erro ao fazer a requisi√ß√£o √† API principal. Verifique as credenciais e tente novamente.")
    else:
        st.warning("‚ö†Ô∏è Por favor, insira as credenciais da API para continuar.")
